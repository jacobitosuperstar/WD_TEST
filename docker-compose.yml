version: '3'

networks:
  server_network:

services:

  # RestAPI
  web:
    build:
      context: .
      dockerfile: ./RestAPI/Dockerfile
    volumes:
      - ./RestAPI:/app/
    env_file:
      - ./RestAPI/.env
    environment:
      - DEBUG=${DEBUG:-true}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-django-insecure-password}
    command: >
      sh -c "
      python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000
      "
    depends_on:
      - rabbit_mq
      - database
    expose:
      - "8000"
    ports:
      - "8000:8000"
    networks:
      - server_network

  # Message Broker
  # rabbitMQ doesn't actually depends on the database, is just done, to give
  # the database time to setup before the other services start.
  rabbit_mq:
    image: "rabbitmq"
    depends_on:
      - database
    expose:
      - "5672"
    ports:
      - "5672:5672"
    networks:
      - server_network

  # Worker sender SMS
  sms_worker:
    build:
      context: .
      dockerfile: ./senderSMS/Dockerfile
    volumes:
      - ./senderSMS:/app/
    command: >
      sh -c "
      python consumer.py
      "
    depends_on:
      - rabbit_mq
    networks:
      - server_network

  # Worker sender Email
  email_worker:
    build:
      context: .
      dockerfile: ./senderEMAIL/Dockerfile
    volumes:
      - ./senderEMAIL:/app/
    command: >
      sh -c "
      python consumer.py
      "
    depends_on:
      - rabbit_mq
    networks:
      - server_network
